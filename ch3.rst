Chapter 3 列表 (Lists)
**********************************

列表是 Lisp 中基本的資料結構之一。在最早的 Lisp 方言中，他們是唯一的資料結構： Lisp 這個名字本來代表的是 "LISt Processor" 。但 Lisp 已經超越這個縮寫很久了。 Common Lisp 是一個有著各式各樣資料結構的通用性程式語言 (general-purpose programming language)。

Lisp 程式開發通常呼應著開發 Lisp 語言自身。在最初版本的 Lisp 程式，你可能使用很多列表。然而之後的版本，你可能轉到快速、特定的資料結構。本章描述了你可以用列表所做的很多事情，以及使用它們來演示一些普遍的 Lisp 概念。

3.1 創建 (Conses)
====================

3.2 等式 (Equality)
=====================

3.3 為什麼Lisp沒有指標 (Why Lisp Has No Pointers)
=======================================================

3.4 建立列表 (Building Lists)
=================================

3.5 範例：壓縮 (Example: Compression)
============================================

3.6 存取 (Access)
======================

3.7 映對函數 (Mapping Functions)
============================================

3.8 樹 (Trees)
======================

3.9 理解遞迴 (Understanding Recursion)
============================================

3.10 集合 (Sets)
======================

3.11 序列 (Sequences)
=================================

3.12 堆疊 (Stacks)
=================================

3.13 點列表 (Dotted Lists)
=================================

3.14 關連列表 (Assoc-lists)
===================================

3.15 範例：最短路徑 (Example: Shortest Path)
==================================================

3.16 垃圾 (Garbages)
=========================

Chapter 3 總結 (Summary)
================================

Chapter 3 練習 (Exercises)
==================================