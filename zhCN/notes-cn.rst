Notes 备注
******************************

备注 178
=========

让我们再回放刚刚的句子一次： *我们可以完成种种的改动，甚至不需要看程序中其他的代码一眼。* 这个想法或许对某些读者听起来担忧地熟悉。这是写出\ `面条式代码 <http://zh.wikipedia.org/wiki/%E9%9D%A2%E6%9D%A1%E5%BC%8F%E4%BB%A3%E7%A0%81>`_\ 的食谱。

面向对象模型使得通过一点一点的来构造程序变得简单。但这通常意味著，在实践上它提供了一种有结构的方法来写出面条式代码。这也须不是坏事，但也不是好事。

很多现实世界中的代码是面条式代码，这也许不能很快改变。针对那些终将成为面条式代码的程序来说，面向对象模型是好的：它们最起码会是有结构的面条。但针对那些也许可以避免误入崎途的程序来说，面向对象抽象只是更加危险的，而不是有用的。